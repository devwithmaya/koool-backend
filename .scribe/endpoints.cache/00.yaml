## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Recipe Management'
description: |-

  APIs for managing recipes.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/recipes
    metadata:
      groupName: 'Recipe Management'
      groupDescription: |-

        APIs for managing recipes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all recipes.'
      description: 'This endpoint retrieves a list of all recipes in the database.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": 200,
          "message": "Liste des recettes",
          "recipes": [
          {
          "id": 1,
          "title": "Spaghetti Bolognese",
          "image": "path/to/image.jpg",
          "summary": "A classic Italian pasta dish.",
          "ingredients": [
          {
          "name": "Spaghetti",
          "quantity": "200g"
          },
          {
          "name": "Ground Beef",
          "quantity": "100g"
          }
          ]
          }
          ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/recipes
    metadata:
      groupName: 'Recipe Management'
      groupDescription: |-

        APIs for managing recipes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created recipe.'
      description: 'This endpoint allows users to create a new recipe.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the recipe.'
        required: true
        example: '"Chocolate Cake"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'An image of the recipe.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      summary:
        name: summary
        description: 'A brief summary of the recipe.'
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ingredients:
        name: ingredients
        description: 'A list of ingredients with their quantities.'
        required: true
        example:
          - aut
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'ingredients[].name':
        name: 'ingredients[].name'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: lsebfhnivlu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'ingredients[].quantity':
        name: 'ingredients[].quantity'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: umvhscdgklhhdzgrlzsud
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'ingredients.*.name':
        name: 'ingredients.*.name'
        description: 'The name of the ingredient.'
        required: true
        example: '"Flour"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'ingredients.*.quantity':
        name: 'ingredients.*.quantity'
        description: 'The quantity of the ingredient.'
        required: true
        example: '"200g"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: '"Chocolate Cake"'
      summary: quo
      ingredients:
        - aut
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
          "id": 1,
          "title": "Chocolate Cake",
          "image": "path/to/image.jpg",
          "summary": "A rich and moist chocolate cake.",
          "ingredients": [
          {
          "name": "Flour",
          "quantity": "200g"
          },
          {
          "name": "Cocoa Powder",
          "quantity": "50g"
          }
          ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "Validation errors",
          "errors": {
          "title": ["The title field is required."],
          "image": ["The image field is required."]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/recipes/{id}'
    metadata:
      groupName: 'Recipe Management'
      groupDescription: |-

        APIs for managing recipes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific recipe.'
      description: 'This endpoint allows users to view a specific recipe by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recipe.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "recipe": {
          "id": 1,
          "title": "Spaghetti Bolognese",
          "image": "path/to/image.jpg",
          "summary": "A classic Italian pasta dish.",
          "ingredients": [
          {
          "name": "Spaghetti",
          "quantity": "200g"
          },
          {
          "name": "Ground Beef",
          "quantity": "100g"
          }
          ]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/recipes/{id}'
    metadata:
      groupName: 'Recipe Management'
      groupDescription: |-

        APIs for managing recipes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing recipe.'
      description: 'This endpoint allows users to update a specific recipe.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recipe.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the recipe.'
        required: true
        example: '"Vegan Pancakes"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image of the recipe.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      summary:
        name: summary
        description: 'A brief summary of the recipe.'
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ingredients:
        name: ingredients
        description: 'A list of ingredients with their quantities.'
        required: true
        example:
          - nisi
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'ingredients[].name':
        name: 'ingredients[].name'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vewsvcmju
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'ingredients[].quantity':
        name: 'ingredients[].quantity'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: zptctdlmfkgwdflmthdrqabf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'ingredients.*.name':
        name: 'ingredients.*.name'
        description: 'The name of the ingredient.'
        required: true
        example: '"Banana"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'ingredients.*.quantity':
        name: 'ingredients.*.quantity'
        description: 'The quantity of the ingredient.'
        required: true
        example: '"2"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: '"Vegan Pancakes"'
      image: est
      summary: dolorem
      ingredients:
        - nisi
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "status": 201,
          "message": "Your recipes have been updated successfully",
          "recipe": {
          "id": 1,
          "title": "Vegan Pancakes",
          "image": "path/to/image.jpg",
          "summary": "Delicious and healthy vegan pancakes.",
          "ingredients": [
          {
          "name": "Banana",
          "quantity": "2"
          },
          {
          "name": "Almond Milk",
          "quantity": "200ml"
          }
          ]
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "Validation errors",
          "errors": {
          "title": ["The title field is required."],
          "image": ["The image field is required."]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/recipes/{id}'
    metadata:
      groupName: 'Recipe Management'
      groupDescription: |-

        APIs for managing recipes.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific recipe.'
      description: 'This endpoint allows users to delete a recipe by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recipe.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
          "status": 204,
          "message": "Your recipe has been deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "status": 404,
          "message": "Recette introuvable"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
